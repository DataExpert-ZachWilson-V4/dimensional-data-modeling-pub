name: Auto Grading

on:
  pull_request_target:
    types: [opened, synchronize]
    branches:
      - main
      - "cicd/**"
    paths:
      - "submission/**"

permissions:
  checks: write
  actions: read
  contents: read

jobs:
  check_files:
    name: 'Check files changed'
    runs-on: ubuntu-latest
    outputs:
      submission_changes: ${{ steps.filtered-changed-files.outputs.any_changed }}
      changed_files: ${{ steps.filtered-changed-files-list.outputs.changed_files }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}

      - name: Get all changed files
        id: tj-actions-changed-files
        uses: tj-actions/changed-files@v44
      
      - name: Get submission file changes from the current commit
        id: filtered-changed-files
        run: |
          files_changed_pr="${{ steps.tj-actions-changed-files.outputs.all_changed_files }}"
          echo "Files changed in PR: $files_changed_pr"

          files_changed_base=$(git diff --name-only ${{ github.event.pull_request.base.sha }} HEAD~1)
          files_changed_head=$(git diff --name-only ${{ github.event.pull_request.head.sha }} HEAD)
          echo "Files changed in base: $files_changed_base"
          echo "Files changed in head: $files_changed_head"

          # Combine files changed in base and head of the pull request
          files_changed_combined="${files_changed_base}${files_changed_head}"
          echo "Combined files changed: $files_changed_combined"

          # Check if files from the combined changes are in the PR changes
          for file in $files_changed_combined; do
            if [[ " $files_changed_pr " =~ " $file " ]]; then
              files_changed_pr_filtered+=( "$file" )
            fi
          done
          
          all_changed_files=$(echo "${files_changed_pr_filtered[@]}" | grep '^submission/' | xargs)
          any_changed=$(if [ -n "$all_changed_files" ]; then echo 'true'; else echo 'false'; fi)
          
          for file in ${all_changed_files}; do echo "$file was changed"; done
          
          echo "::set-output name=all_changed_files::$all_changed_files"
          echo "::set-output name=any_changed::$any_changed"

      # Set output indicating whether any submission files have changed
      - name: Run step only if any submission file(s) changed
        id: filtered-changed-files-list
        if: steps.filtered-changed-files.outputs.any_changed == 'true'
        env:
          ALL_CHANGED_FILES: ${{ steps.filtered-changed-files.outputs.all_changed_files }}
        run: |
          echo "One or more files in the submission folder has changed."
          echo "Files changed: ${ALL_CHANGED_FILES// /,}"
          echo "::set-output name=changed_files::${ALL_CHANGED_FILES// /,}"
